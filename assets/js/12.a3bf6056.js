(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{286:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git初学者的实践总结-摘自廖老师"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git初学者的实践总结-摘自廖老师"}},[t._v("#")]),t._v(" Git初学者的实践总结（摘自廖老师）")]),t._v(" "),a("blockquote",[a("p",[t._v("2020-04-19 21:39:38\n"),a("br"),t._v("分类专栏：git github")])]),t._v(" "),a("p",[t._v("本文摘自廖老师的Git教程")]),t._v(" "),a("p",[t._v("当你已经安装好Git后，进入Git Bash，会提示要输入用户名和邮箱。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx@xxx.com"')]),t._v("\n")])])]),a("p",[t._v("在设置好你的名字和邮箱后，可以通过命令"),a("code",[t._v("pwd")]),t._v("来查看当前的目录。\n"),a("strong",[t._v("创建版本库")]),t._v("\n用"),a("code",[t._v("cd")]),t._v("来锁定到你要添加版本库的路径")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /e/Git\n")])])]),a("p",[t._v("可以再用"),a("code",[t._v("pwd")]),t._v("来查看路径是否正确，确定好后就可以用命令"),a("code",[t._v("mkdir")]),t._v("添加你的版本库了(当然你可以手动在Git下创建，请尽量使用英文起名来避免产生麻烦)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" learngit\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" learngit\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v("\n/e/Git/learngit\n")])])]),a("p",[t._v("使用"),a("code",[t._v("git init")]),t._v("命令把这个目录变成Git可以管理的仓库")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),a("p",[a("strong",[t._v("把文件添加到版本库")]),t._v("\nWindows用户请不要使用自带的"),a("strong",[t._v("记事本")]),t._v("编辑任何文本文件（可能会遇到很多问题，因为开发团队的一点点画蛇添足），所以推荐使用免费的Notepad++来编辑文本（注意将默认编码设置为UTF-8 without BOM）。\n注：编写的文件（如：readme.txt）要在learngit目录下才能被Git管理。\n此时编写好的文件处在工作区，要将readme.txt添加到版本库需要两步。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200419212903110.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MzYzNzkw,size_16,color_FFFFFF,t_70#pic_center",alt:"暂存区"}}),t._v("\n第一步：使用命令"),a("code",[t._v("git add")]),t._v("将文件添加到暂存区（版本库的左部分），此步还未提交到分支，只是暂存")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt\n")])])]),a("p",[t._v("执行命令后，没有任何显示证明你是对的（没有消息就是最好的消息），此时可以用命令"),a("code",[t._v("git status")]),t._v("来查看当前仓库状态，出现一堆字表示还未将该文件提交到仓库。\n第二步：执行"),a("code",[t._v("git commit")]),t._v("命令将文件提交到分支（版本库的右部分）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你对本次改动的注释"')]),t._v("\n")])])]),a("p",[t._v('此处若不写-m "注释"，则执行后会跳到Vim,所以为了带来不必要的麻烦，也为了给自己更清晰的改动思路，把注释写上还是好的。\n此时再用命令'),a("code",[t._v("git status")]),t._v("查看仓库的状态，则会显示working tree clean,表示暂存区的所有文件都已经提交了。因为commit可以提交多个文件，所以你可以添加多个文件到暂存区后一起提交。（这就是为什么要分两步提交的一个原因了）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" test.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add 2 files"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("小结：")]),t._v("\n初始化仓库："),a("code",[t._v("git init")]),t._v("\n添加文件到仓库：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add a file"')]),t._v("\n")])])]),a("p",[t._v("到这里你可以去实践一下啦\n"),a("strong",[t._v("修改及再次提交")]),t._v("\n我们在Notepad++中修改文件（删去一个单词）")]),t._v(" "),a("div",{staticClass:"language-handlebars extra-class"},[a("pre",{pre:!0,attrs:{class:"language-handlebars"}},[a("code",[t._v("Git is a version control system.\nGit is free software.\n")])])]),a("p",[t._v("修改之后的文件需要再次提交（同样是那两步），我们使用命令"),a("code",[t._v("git status")]),t._v("可以查看当前仓库的状态，它告诉我们readme.txt文件被修改了")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\nChanges not staged "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" commit:\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" working directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tmodified:   readme.txt\n\nno changes added to commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在提交之前我们可以使用命令"),a("code",[t._v("git diff")]),t._v("来查看具体修改的位置及内容")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" readme.txt \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--git")]),t._v(" a/readme.txt b/readme.txt\nindex 46d49bf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("9247db6 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/readme.txt\n+++ b/readme.txt\n@@ -1,2 +1,2 @@\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Git")]),t._v(" is a version control system.\n+Git is a distributed version control system.\n Git is "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software. \n")])])]),a("p",[t._v("这里我们可以看到将原来的句子Git is a version control system.添加了一个词distributed，后面的一个句子没有改变。\n再我们确定了修改的内容之后就可以提交了，这里不再重复，如果你有些忘记了，请翻回上边把文件添加到版本库哦~\n"),a("strong",[t._v("版本回退")]),t._v("\n手滑误删是最常见的事了，不过在Git中总是可以补救的\n使用命令"),a("code",[t._v("git log")]),t._v("查看提交历史，即查看都有哪些版本")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\ncommit 1094adb7b9b3807259d8cb349e7df1d4d6477073 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor: Michael Liao "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("askxuefeng@gmail.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Fri May "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":06:15 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" +0800\n\n    append GPL\n\ncommit e475afc93c209a690c39c13a46716e8fa000c366\nAuthor: Michael Liao "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("askxuefeng@gmail.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Fri May "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":03:36 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" +0800\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" distributed\n\ncommit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0\nAuthor: Michael Liao "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("askxuefeng@gmail.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Fri May "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":59:18 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" +0800\n\n    wrote a readme "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),a("p",[t._v("在commit后面的一串数字是版本号，我们可以通过版本号来实现回退版本，若你觉得显示的太繁琐可以在命令后加参数即"),a("code",[t._v("git log --pretty=oneline")]),t._v("来显示出一行（版本号及你的注释）")]),t._v(" "),a("div",{staticClass:"language-handlebars extra-class"},[a("pre",{pre:!0,attrs:{class:"language-handlebars"}},[a("code",[t._v("$ git log --pretty=oneline\n1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -> master) append GPL\ne475afc93c209a690c39c13a46716e8fa000c366 add distributed\neaadf4e385e865d25c48e7ca9c8395c3f7dfaef0 wrote a readme file\n")])])]),a("p",[t._v("下面我们使用命令"),a("code",[t._v("git reset")]),t._v("回退版本（后面还有它的另一个功能）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" HEAD^\nHEAD is now at e475afc "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" distributed\n")])])]),a("p",[t._v("这里的参数"),a("code",[t._v("--hard")]),t._v("会在以后讲到，请先用着嘿嘿，"),a("code",[t._v("HEAD")]),t._v("表示当前版本，类似指针指向当前版本，则"),a("code",[t._v("HEAD^")]),t._v("是上一个版本，类似"),a("code",[t._v("HEAD^^")]),t._v("则是上上个版本，若十多个则可以使用"),a("code",[t._v("HEAD~10")]),t._v("则是往上10个版本。\n这里我们可以使用命令"),a("code",[t._v("cat")]),t._v("来查看文件内容，看看是否回退了版本。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" readme.txt\nGit is a distributed version control system.\nGit is "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software.\n")])])]),a("p",[t._v("这时我们还可以找回之前回退被顶掉的版本，用版本号来指定回到版本,只需版本号的前几位即可。翻回之前查看的版本号")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" 1094a\nHEAD is now at 83b0afe append GPL\n")])])]),a("p",[t._v("此时的版本号已经改变\n可见我们可以通过查看版本号来实现回到指定的版本，但如果我们找不到被顶掉的版本号怎么办？通过指令"),a("code",[t._v("git reflog")]),t._v("来查看你的每一步命令")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\ne475afc HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": reset: moving to HEAD^\n1094adb "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: append GPL\ne475afc HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" distributed\neaadf4e HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": wrote a readme "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),a("p",[t._v("这时通过查看命令我们可以看到最新commit的是1094a,我们就可以通过版本号来实现了。\n"),a("strong",[t._v("小结")]),t._v("\n查看提交历史："),a("code",[t._v("git log")]),t._v("，便于回退版本\n查看命令历史："),a("code",[t._v("git reflog")]),t._v("，便于找回版本\n"),a("strong",[t._v("撤销修改")]),t._v("\n这里有两种情况\n一种情况是在本地修改也就是在工作区，还没有用"),a("code",[t._v("git add readme.txt")]),t._v("来将文件添加到暂存区时，这时使用命令"),a("code",[t._v("git checkout -- readme.txt")]),t._v("来撤销会返回到和版本库（暂存区和提交区）一样的状态，也就是把在工作区的修改撤销了。")]),t._v(" "),a("p",[t._v("另一种情况是在已经添加到暂存区，此时使用命令"),a("code",[t._v("git reset HEAD readme.txt")]),t._v("修改，撤销会将暂存区的修改撤销掉然后重新放回到工作区。"),a("code",[t._v("git reset")]),t._v("命令不仅可以回退版本，也可以将暂存区的修改回退到工作区。这时用"),a("code",[t._v("HEAD")]),t._v("表示最新版本。")]),t._v(" "),a("p",[t._v("总之就是返回到最近的一次"),a("code",[t._v("git add")]),t._v("或"),a("code",[t._v("git commit")]),t._v("时的状态（需要理解一下）\n"),a("strong",[t._v("小结")]),t._v("\n撤销工作区的修改："),a("code",[t._v("git checkout -- <filename>")]),t._v("\n撤销暂存区的修改："),a("code",[t._v("git reset HEAD <filename>")]),t._v("\n若已提交，请参考回退版本。")]),t._v(" "),a("p",[t._v("若你还是觉得不懂的话请移步廖老师的Git教程，讲的真的很好！\n(https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000)")]),t._v(" "),a("p",[t._v("还会陆续通过自身实践补充，若有错误的地方请及时与我沟通或下方评论。本人是小白一个，希望会得到鼓励嘻嘻。")]),t._v(" "),a("p",[t._v("下篇我会总结如何将本地仓库关联到Github上的远程仓库、远程库克隆到本地及分支的管理等。后续还会出详细的Github Desktop的使用来代替较复杂的Git（但是若是你基本熟悉了Git的命令会更加快速的接受Github Desktop）。")])])}),[],!1,null,null,null);a.default=n.exports}}]);